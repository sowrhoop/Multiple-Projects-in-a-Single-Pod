FROM debian:bookworm-slim

ARG DEBIAN_FRONTEND=noninteractive

# Build args to point at your two repos and refs (branches/commits/tags)
ARG SERVICE_A_REPO
ARG SERVICE_A_REF=main
ARG SERVICE_B_REPO
ARG SERVICE_B_REF=main

RUN apt-get update \
 && apt-get install -y --no-install-recommends \
    python3 \
    python3-pip \
    python3-venv \
    nodejs \
    npm \
    git \
    supervisor \
    ca-certificates \
    curl \
 && rm -rf /var/lib/apt/lists/*

WORKDIR /opt/services

# Create dedicated unprivileged users for each service
RUN useradd -r -u 10001 -m -d /home/svc_a -s /usr/sbin/nologin svc_a \
 && useradd -r -u 10002 -m -d /home/svc_b -s /usr/sbin/nologin svc_b

# Create isolated venv for Python service to avoid system site-packages
RUN python3 -m venv /opt/venv-a
ENV PATH=/opt/venv-a/bin:$PATH

# Clone and install Service A (Python)
RUN if [ -n "$SERVICE_A_REPO" ]; then \
      git clone --depth=1 --branch "$SERVICE_A_REF" "$SERVICE_A_REPO" service-a; \
    fi
RUN if [ -f service-a/requirements.txt ]; then \
      /opt/venv-a/bin/pip install --no-cache-dir -r service-a/requirements.txt; \
    fi

# Clone and install Service B (Node.js)
RUN if [ -n "$SERVICE_B_REPO" ]; then \
      git clone --depth=1 --branch "$SERVICE_B_REF" "$SERVICE_B_REPO" service-b; \
    fi
RUN if [ -f service-b/package.json ]; then \
      cd service-b && (npm ci || npm install --no-audit --no-fund) && cd ..; \
    fi

# Restrict code directories: only owning service user can access
RUN chown -R svc_a:svc_a /opt/services/service-a \
 && chown -R svc_b:svc_b /opt/services/service-b \
 && chmod -R 750 /opt/services/service-a /opt/services/service-b

# Supervisor config and health/entrypoint
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY healthcheck.sh /healthcheck.sh
COPY scripts/entrypoint.sh /entrypoint.sh
RUN chmod +x /healthcheck.sh /entrypoint.sh \
 && apt-get purge -y git \
 && apt-get autoremove -y \
 && rm -rf /var/lib/apt/lists/*

EXPOSE 8080 9090

HEALTHCHECK --interval=30s --timeout=5s --start-period=20s --retries=3 CMD /healthcheck.sh || exit 1

LABEL org.opencontainers.image.title="two-services supervisor (multirepo)" \
      org.opencontainers.image.description="Supervisor image running service-a (Python) and service-b (Node.js) from external repos with user separation and healthcheck" \
      org.opencontainers.image.source="https://github.com/${GITHUB_REPOSITORY}" \
      org.opencontainers.image.vendor="${GITHUB_ACTOR}" \
      org.opencontainers.image.licenses="MIT"

ENTRYPOINT ["/entrypoint.sh"]
