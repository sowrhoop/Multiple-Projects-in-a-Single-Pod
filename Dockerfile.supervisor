FROM debian:bookworm-slim

ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update \
 && apt-get install -y --no-install-recommends \
    python3 \
    python3-pip \
    python3-venv \
    nodejs \
    npm \
    supervisor \
    curl \
    ca-certificates \
 && rm -rf /var/lib/apt/lists/*

# Create dedicated unprivileged users for each service
RUN useradd -r -u 10001 -m -d /home/svc_a -s /usr/sbin/nologin svc_a \
 && useradd -r -u 10002 -m -d /home/svc_b -s /usr/sbin/nologin svc_b

WORKDIR /opt/services

# Create venv for Python service to avoid PEP 668 (externally managed env)
RUN python3 -m venv /opt/venv-a
ENV PATH=/opt/venv-a/bin:$PATH

# Copy monorepo services
COPY services/service-a/ /opt/services/service-a/
RUN if [ -f /opt/services/service-a/requirements.txt ]; then \
      /opt/venv-a/bin/pip install --no-cache-dir -r /opt/services/service-a/requirements.txt; \
    fi

COPY services/service-b/ /opt/services/service-b/
RUN if [ -f /opt/services/service-b/package.json ]; then \
      cd /opt/services/service-b && (npm ci || npm install --no-audit --no-fund); \
    fi

# Restrict code directories: only owning service user can access
RUN chown -R svc_a:svc_a /opt/services/service-a \
 && chown -R svc_b:svc_b /opt/services/service-b \
 && chmod -R 750 /opt/services/service-a /opt/services/service-b

# Supervisor config
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY healthcheck.sh /healthcheck.sh
COPY scripts/entrypoint.sh /entrypoint.sh
RUN chmod +x /healthcheck.sh /entrypoint.sh

EXPOSE 8080 9090

HEALTHCHECK --interval=30s --timeout=5s --start-period=20s --retries=3 CMD /healthcheck.sh || exit 1

ENTRYPOINT ["/entrypoint.sh"]
