name: Build and Push (Supervisor Image)

permissions:
  contents: read
  packages: write
  id-token: write
  security-events: write

on:
  # Disabled automatic push triggers to avoid accidental runs in the orchestrator repo.
  # Use the merge workflow instead, or run this manually for the monorepo layout.
  workflow_dispatch: {}

concurrency:
  group: build-supervisor-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 1

      - name: Check monorepo layout
        id: layout
        shell: bash
        run: |
          if [ -d services/service-a ] && [ -d services/service-b ]; then
            echo "monorepo=true" >> "$GITHUB_OUTPUT"
          else
            echo "monorepo=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract owner for GHCR
        id: ghcr
        run: |
          OWNER="${GITHUB_REPOSITORY%%/*}"
          echo "owner=${OWNER,,}" >> "$GITHUB_OUTPUT"

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ steps.ghcr.outputs.owner }}/two-services
          tags: |
            type=raw,value=latest
            type=sha,format=long
          labels: |
            org.opencontainers.image.title=two-services supervisor
            org.opencontainers.image.description=Supervisor image running service-a (Python) and service-b (Node.js)
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push to GHCR (monorepo)
        if: steps.layout.outputs.monorepo == 'true'
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.supervisor
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: true
          sbom: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Skip build (not a monorepo)
        if: steps.layout.outputs.monorepo != 'true'
        run: |
          echo "This workflow is for the monorepo layout (services/service-a and services/service-b)." \
               "Use the 'Build Service A & B, then Merge' workflow for external repos or prebuilt images." && exit 0

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Sign image (keyless via OIDC)
        if: steps.layout.outputs.monorepo == 'true'
        env:
          COSIGN_EXPERIMENTAL: "1"
          IMAGE_DIGEST: ${{ steps.build.outputs.digest }}
          IMAGE_NAME: ghcr.io/${{ steps.ghcr.outputs.owner }}/two-services
        run: |
          cosign sign --yes ${IMAGE_NAME}@${IMAGE_DIGEST}

      - name: Trivy vulnerability scan
        if: steps.layout.outputs.monorepo == 'true'
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ghcr.io/${{ steps.ghcr.outputs.owner }}/two-services@${{ steps.build.outputs.digest }}
          format: sarif
          output: trivy-results.sarif
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
          exit-code: '0'

      - name: Upload Trivy report to code scanning
        if: steps.layout.outputs.monorepo == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif